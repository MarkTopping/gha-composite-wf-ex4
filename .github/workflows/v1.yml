name: GHA Composite WF Example 4 - V1

run-name:  "#${{ github.run_number }}. Build and Deploy on ${{ github.ref_type }} '${{ github.ref_name }}'. Triggered by: ${{ github.triggering_actor }}"

on:
  # Allow for manual execution and to trigger Secondary region deployments
  workflow_dispatch:
        
  # Auto trigger when pushes to selected branch naming conventions occur
  #push: 
    #branches: [main, feat/**, feature/**, release/**]
    #paths-ignore: ['*.md']
  # Auto trigger when a release is created
  #release:
    #types: [published]

jobs:

  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Build
        run: echo "running docker build --target=build"
      - name: Test
        run: echo "running docker build --target=test"

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Lint Tool
        run: echo "Setting up Lint tool"
      - name: Lint Code
        run: echo "Linting code"

  code-scan:
    runs-on: ubuntu-latest
    #if: ${{ inputs.BypassCodeScan != true }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download Vericode
        run: echo "downloading Vericode"
      - name: Scan
        run: echo "scanning code"

  publish:
    runs-on: ubuntu-latest
    #if: ${{ always() && (inputs.BypassCodeScan == true || needs.code-scan.result == 'success') }}
    needs: [build-and-test, code-scan]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build Image
        run: echo "running docker build --target=final"
      - name: Download Trivy
        run: echo "downloading Trivy"
      - name: Aqua Image Scan
        run: echo "scanning image"
      - name: Login to ACR
        run: echo "logging into ACR"
      - name: Publish Image
        run: echo "publishing image with tag ???"
      - name: Logout of ACR
        run: echo "logging out of ACR"

  deploy-to-dev:
    runs-on: ubuntu-latest
    # Logic lets Job run if Code-Scan was skipped, but only triggers if we're not deploying to a Secondary region
    #if: ${{ always() && (inputs.DeployToUatSecondary == false && inputs.DeployToPrdSecondary == false) }}
    needs: [publish]
    environment: dev
    steps:
      - name: Deploy to Dev
        run: echo "deploying via helm"

  
  # Deploy to Test
  # --------------
  deploy-to-test-region-1:
    runs-on: ubuntu-latest
    #if: ${{ always() && (inputs.DeployToUatSecondary == false && inputs.DeployToPrdSecondary == false) }}
    needs: [publish]
    environment: test primary
    steps:
      - name: Deploy to Test
        run: echo "deploying via helm"

  deploy-to-test-region-2:
    runs-on: ubuntu-latest
    needs: [publish]
    environment: test secondary
    steps:
      - name: Generate Random Number
        id: rnd
        run: echo "::set-output name=random:$(echo $RANDOM % 10)"
      - name: Check for Force Failure
        #if: ${{ inputs.ForceFailTest2 == true }}
        if: ${{ steps.rnd.outputs.random < 4 }}
        run: |
          echo: "Deployment to Test Region 2 was force failed by user"
          exit 1
      - name: Deploy to Test Region 1
        run: echo "deploying via helm"


  # Deploy to UAT
  # --------------
  deploy-to-uat-region-1:
    # This if condition allows the job to run if either of the dependencies (needs) jobs run successfully
    if: ${{ always() && (contains(join(needs.*.result, ','), 'success')) }}
    runs-on: ubuntu-latest
    needs: [deploy-to-test-region-1, deploy-to-test-region-2]
    environment: uat primary
    steps:
      - name: Deploy to UAT Region 1
        run: echo "deploying via helm"

  deploy-to-uat-region-2:
    if: ${{ always() && (contains(join(needs.*.result, ','), 'success')) }}
    runs-on: ubuntu-latest
    needs: [deploy-to-test-region-1, deploy-to-test-region-2]
    environment: uat secondary
    steps:
      - name: Generate Random Number
        id: rnd
        run: echo "::set-output name=random:$(echo $RANDOM % 10)"
      - name: Check for Force Failure
        #if: ${{ inputs.ForceFailTest2 == true }}
        if: ${{ steps.rnd.outputs.random < 4 }}
        # if: ${{ inputs.ForceFailUat2 == true }}
        run: |
          echo: "Deployment to UAT Region 2 was force failed by user"
          exit 1
      - name: Deploy to UAT Region 2
        run: echo "deploying via helm"


  # Deploy to PRD
  # --------------
  deploy-to-prd-region-1:
    if: ${{ always() && (contains(join(needs.*.result, ','), 'success')) }}
    runs-on: ubuntu-latest
    needs: [deploy-to-uat-region-1, deploy-to-uat-region-2]
    environment: prd primary
    steps:
      - name: Deploy to PRD Region 1
        run: echo "deploying via helm"
        
  deploy-to-prd-region-2:
    if: ${{ always() && (contains(join(needs.*.result, ','), 'success')) }}
    runs-on: ubuntu-latest
    needs: [deploy-to-uat-region-1, deploy-to-uat-region-2]
    environment: prd secondary
    steps:
      - name: Generate Random Number
        id: rnd
        run: echo "::set-output name=random:$(echo $RANDOM % 10)"
      - name: Check for Force Failure
        #if: ${{ inputs.ForceFailTest2 == true }}
        if: ${{ steps.rnd.outputs.random < 4 }}
        run: |
          echo: "Deployment to PRD Region 2 was force failed by user"
          exit 1
      - name: Deploy to PRD Region 2
        run: echo "deploying via helm"
